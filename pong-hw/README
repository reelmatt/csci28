README for pong

  Student: Matthew Thomas
  Date: 4/6/2019

Summary:

This submission contains the files:
[]	Makefile     -- The Makefile
[x]	README       -- This file
[]	Plan         -- Design document for this assignment
[x]	my_script.sh -- My sample test script, to compile pong
[]	typescript   -- Run of my_script to show program compiles with no errors
[]	pong.c       -- All logic to retrieve, update, and show tty settings
[]	pong.h       -- Header file for pong.c
[x]	alarmlib.c   -- Timer functions for higher resolution clock
[x]	alarmlib.h   -- Header file for alarmlib.h
[]	ball.c       -- Create and operate a ball object for a game of pong
[]	ball.h       -- Header file for ball.c
[x]	clock.c      -- Create and operate a clock object for a game of pong
[x]	clock.h      -- Header file for clock.c
[x]	court.c      -- Create and draw a court for a game of pong
[x]	court.h      -- Header file for court.c
[]	paddle.c     -- Create and operate a paddle object for a game of pong
[]	paddle.h     -- Header file for paddle.h

Notes:
	Several functions, or parts of functions, were copied from samples
	provided in the lecture files. When this code has been used, a note on the
	source appears in the function comments. Any modifications were made by me.
	For the getbaud() function, I used values from the Open Group standards
	page, which is link in the comments. Other ideas were taken from section
	meetings, and a Piazza post. These contributions are also noted where they
	occur.
	
	I wrote my code using a combination of BBEdit on the Mac, and server-side
	editing using Emacs. Indentation is 4-space wide tabs. Before submission,
	I ran the Emacs command 'M-x untabify' to convert tabs to spaces.
